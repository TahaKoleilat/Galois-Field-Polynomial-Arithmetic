
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# Explicit imports to satisfy Flake8
import tkinter as tk
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Label, OptionMenu, StringVar, font, messagebox, IntVar, Radiobutton, Text, simpledialog
from turtle import width
from poly import polynomialMultiply, polynomialMultiplicativeInverse, moduloReduction, polynomialDivision, polynomialSubtract, polynomialAdd

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")

irreduciblePolynomial = {"x^163 + x^80 + x^47 + x^9 + 1":0x80000000000000000000100000000800000000201,"x^163 + x^133 + x^115 + x^64 + 1" : 0x80000002000080000000000010000000000000001, "x^163 + x^153 + x^88 + x^59 + x^40 + x^4 + 1" : 0x80200000000000000010000000800010000000011, "x^233 + x^74 + 1" : 0x20000000000000000000000000000000000000004000000000000000001,"x^233 + x^ 189 + x^149 + x^41 + 1" : 0x20000000000200000000020000000000000000000000000020000000001, "x^233 + x^230 + x^185 + x^148 + x^65 + x^58 + 1": 0x24000000000020000000010000000000000000000020400000000000001,
"x^239 + x^36 + 1" : 0x80000000000000000000000000000000000000000000000000000000003f, "x^239 + x^66 + x^56 + x^10 + 1" : 0x800000000000000000000000000000000000000000040100000000000401,"x^239 + x^226 + x^216 + x^207 + x^61 + x^12 + 1": 0x800401008000000000000000000000000000000000002000000000001001,
"x^283 + x^12 + x^7 + x^5 + 1": 0x800000000000000000000000000000000000000000000000000000000000000000010a1,"x^283 + x^35 + 1" : 0x80000000000000000000000000000000000000000000000000000000000000800000001, "x^283 + x^199 + x^80 + x^16 + 1" : 0x80000000000000000000080000000000000000000000000000100000000000000010001,"x^283 + x^270 + x^161 + x^138 + x^122 + x^40 + 1":0x80040000000000000000000000000020000040004000000000000000000010000000001,                             
"x^409 + x^87 + 1": 0x2000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000001,"x^409 + x^207 + x^157 + x^127 + 1" : 0x2000000000000000000000000000000000000000000000000008000000000002000000080000000000000000000000000000001, "x^409 + x^401 + x^247 + x^148 + x^99 + x^80 + 1": 0x2020000000000000000000000000000000000000080000000000000000000000010000000000008000100000000000000000001,
"x^571 + x^10 + x^5 + x^2 + 1": 0x80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000425}

choices = {"163":["x^163 + x^80 + x^47 + x^9 + 1","x^163 + x^133 + x^115 + x^64 + 1","x^163 + x^153 + x^88 + x^59 + x^40 + x^4 + 1"], "233":["x^233 + x^74 + 1","x^233 + x^ 189 + x^149 + x^41 + 1", "x^233 + x^230 + x^185 + x^148 + x^65 + x^58 + 1"], "239":["x^239 + x^36 + 1","x^239 + x^66 + x^56 + x^10 + 1","x^239 + x^226 + x^216 + x^207 + x^61 + x^12 + 1"],"283":["x^283 + x^12 + x^7 + x^5 + 1","x^283 + x^35 + 1", "x^283 + x^199 + x^80 + x^16 + 1","x^283 + x^270 + x^161 + x^138 + x^122 + x^40 + 1"],"409":["x^409 + x^87 + 1","x^409 + x^207 + x^157 + x^127 + 1", "x^409 + x^401 + x^247 + x^148 + x^99 + x^80 + 1"],"571":["x^571 + x^10 + x^5 + x^2 + 1"]}                               

import sys, os 
def resource_path(relative_path):
    return os.path.join(os.path.join(os.getcwd(),"assets"), relative_path)


window = Tk()

window.geometry("697x775")
window.configure(bg = "#3C91E6")


canvas = Canvas(
    window,
    bg = "#3C91E6",
    height = 775,
    width = 697,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_text(
    30.999999999999886,
    26.0,
    anchor="nw",
    text="Polynomial Arithmetic in GF(2^m)",
    fill="#FAFFFD",
    font=("Habibi Regular", 32 * -1)
)
class CustomDialog(tk.simpledialog.Dialog): #reference to https://stackoverflow.com/questions/35923235/is-there-a-message-box-which-displays-copy-able-text-in-python-2-7

    def __init__(self, parent, title=None, text=None):
        self.data = text
        tk.simpledialog.Dialog.__init__(self, parent, title=title)
        

    def body(self, parent):

        self.text = tk.Text(self, width=60, height=10)
        self.text.pack(fill="both", expand=True)

        self.text.insert("1.0", self.data)

        return self.text
def popup():
    message = "Please enter two polynomials either in binary or hex format.\nYou can also select a m and irreducible polynomial you want. \nA sample test case would be F67BA31F46EBA for polynomial 1 \nand AB35DC2511 for polynomial 2.\nYou can also choose to output the result\nin either binary or hex format.\n Note that if your doing Inverse or Modolu Reduction, \nonly the first polynomial will be used."
    CustomDialog(window,title="Example", text=message)
entry_image_1 = PhotoImage(
    file=resource_path("entry_1.png"))
entry_bg_1 = canvas.create_image(
    268.4999999999999,
    205.0,
    image=entry_image_1
)
info_button = Button(window,text = "Info", command=popup)
info_button.place(
    x=550,
    y=183,
    width=70,
    height=42.0
)
entry_1 = Entry(
    bd=0,
    bg="#FAFFFD",
    highlightthickness=0
)
entry_1.place(
    x=33.999999999999886,
    y=183.0,
    width=469.0,
    height=42.0
)

entry_image_2 = PhotoImage(
    file=resource_path("entry_2.png"))
entry_bg_2 = canvas.create_image(
    272.4999999999999,
    291.0,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#FAFFFD",
    highlightthickness=0
)
entry_2.place(
    x=37.999999999999886,
    y=268.0,
    width=469.0,
    height=44.0
)

entry_image_3 = PhotoImage(
    file=resource_path("entry_3.png"))
entry_bg_3 = canvas.create_image(
    212.9999999999999,
    385.0,
    image=entry_image_3
)
OPTIONS = [163,233, 239, 283, 409, 571]
variable = StringVar(window)
variable.set(OPTIONS[0]) 

entry_3 = OptionMenu(window, variable, *OPTIONS,)
entry_3.config(bd=0,bg="#FAFFFD",highlightthickness=0)
entry_3.place(
    x=38.999999999999886,
    y=362.0,
    width=348.0,
    height=44.0,
)

def update_options(*args):
    options = choices[variable.get()]
    variable2.set(options[0])
    menu = entry_4['menu']
    menu.delete(0, 'end')
    for choice in options:
        print(choice)
        menu.add_command(label=choice, command=lambda x=choice: variable2.set(x))
variable.trace('w', update_options)
variable2 = StringVar(window)
entry_4 = OptionMenu(window, variable2,'',)
entry_4.config(bd=0,bg="#FAFFFD",highlightthickness=0)
entry_4.place(
    x=400,
    y=362.0,
    width=348.0,
    height=44.0,
)

label= Text(window, font=('Helvetica 13'),relief="flat")
label.place(
    x=45.999999999999886,
    y=685.0,
    width=581.0,
    height=46.0
)


canvas.create_text(
    25.999999999999886,
    154.0,
    anchor="nw",
    text="Polynomial 1",
    fill="#FAFFFD",
    font=("BakbakOne Regular", 18 * -1)
)

canvas.create_text(
    30.999999999999886,
    232.0,
    anchor="nw",
    text="Polynomial 2",
    fill="#FAFFFD",
    font=("BakbakOne Regular", 18 * -1)
)

canvas.create_text(
    29.999999999999886,
    325.0,
    anchor="nw",
    text=" m",
    fill="#FAFFFD",
    font=("BakbakOne Regular", 18 * -1)
)
canvas.create_text(
    401,
    325.0,
    anchor="nw",
    text="Irreducible Polynomial",
    fill="#FAFFFD",
    font=("BakbakOne Regular", 18 * -1)
)
canvas.create_text(
    41.999999999999886,
    648.0,
    anchor="nw",
    text="Result",
    fill="#FAFFFD",
    font=("BakbakOne Regular", 18 * -1)
)
def button1():
    try:
        poly1 = int(entry_1.get(),2)
    except ValueError:
        poly1 = int(entry_1.get(),16)
    try:
        poly2 = int(entry_2.get(),2)
    except ValueError:
        poly2 = int(entry_2.get(),16)
    ResultFormat = var.get()
    mChoice = variable.get()
    polyChoice = variable2.get()
    if(ResultFormat == 1):
        quotient, remainder = polynomialDivision(poly1,poly2)
        quotient = moduloReduction(quotient,irreduciblePolynomial[polyChoice])
        remainder = moduloReduction(remainder,irreduciblePolynomial[polyChoice])
        quotient = "{0:b}".format(quotient)
        remainder = "{0:b}".format(remainder)
        label.delete('1.0',tk.END)
        label.insert('1.0',"quotient: " + quotient + " remainder: " + remainder)
    else:
        quotient, remainder = polynomialDivision(poly1,poly2)
        quotient = moduloReduction(quotient,irreduciblePolynomial[polyChoice])
        remainder = moduloReduction(remainder,irreduciblePolynomial[polyChoice])
        quotient = "{0:x}".format(quotient)
        remainder = "{0:x}".format(remainder)
        label.delete('1.0',tk.END)
        label.insert('1.0',"quotient: " + quotient + " remainder: " + remainder)
    
def button2():
    try:
        poly1 = int(entry_1.get(),2)
    except ValueError:
        poly1 = int(entry_1.get(),16)
    try:
        poly2 = int(entry_2.get(),2)
    except ValueError:
        poly2 = int(entry_2.get(),16)
    ResultFormat = var.get()
    mChoice = variable.get()
    polyChoice = variable2.get()
    if(ResultFormat == 1):
        out = moduloReduction(polynomialMultiply(poly1,poly2,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:b}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
    else:
        out = moduloReduction(polynomialMultiply(poly1,poly2,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:x}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
    
def button3():
    try:
        poly1 = int(entry_1.get(),2)
    except ValueError:
        poly1 = int(entry_1.get(),16)
    ResultFormat = var.get()
    polyChoice = variable2.get()
    if(ResultFormat == 1):
        out = moduloReduction(poly1,irreduciblePolynomial[polyChoice])
        out = "{0:b}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
    else:
        out = moduloReduction(poly1,irreduciblePolynomial[polyChoice])
        out = "{0:x}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
    
def button4():
    try:
        poly1 = int(entry_1.get(),2)
    except ValueError:
        poly1 = int(entry_1.get(),16)
    try:
        poly2 = int(entry_2.get(),2)
    except ValueError:
        poly2 = int(entry_2.get(),16)
    ResultFormat = var.get()
    polyChoice = variable2.get()
    if(ResultFormat == 1):
        out = moduloReduction(polynomialSubtract(poly1,poly2,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:b}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
    else:
        out = moduloReduction(polynomialSubtract(poly1,poly2,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:x}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
def button5():
    try:
        poly1 = int(entry_1.get(),2)
    except ValueError:
        poly1 = int(entry_1.get(),16)
    try:
        poly2 = int(entry_2.get(),2)
    except ValueError:
        poly2 = int(entry_2.get(),16)
    ResultFormat = var.get()
    polyChoice = variable2.get()
    if(ResultFormat == 1):
        out = moduloReduction(polynomialAdd(poly1,poly2,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:b}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
    else:
        out = moduloReduction(polynomialAdd(poly1,poly2,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:x}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
def button6():
    try:
        poly1 = int(entry_1.get(),2)
    except ValueError:
        poly1 = int(entry_1.get(),16)
    ResultFormat = var.get()
    polyChoice = variable2.get()
    if(ResultFormat == 1):
        out = moduloReduction(polynomialMultiplicativeInverse(poly1,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:b}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
    else:
        out = moduloReduction(polynomialMultiplicativeInverse(poly1,irreduciblePolynomial[polyChoice]),irreduciblePolynomial[polyChoice])
        out = "{0:x}".format(out)
        label.delete('1.0',tk.END)
        label.insert('1.0',out)
button_image_1 = PhotoImage(
    file=resource_path("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    relief="flat",
    command=button1
)
button_1.place(
    x=361.9999999999999,
    y=570.0,
    width=239.0,
    height=67.0
)

button_image_2 = PhotoImage(
    file=resource_path("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command= button2,
    relief="flat"
)
button_2.place(
    x=28.999999999999886,
    y=570.0,
    width=239.0,
    height=67.0
)

button_image_3 = PhotoImage(
    file=resource_path("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=button3,
    relief="flat"
)
button_3.place(
    x=29.999999999999886,
    y=426.0,
    width=239.0,
    height=67.0
)

button_image_4 = PhotoImage(
    file=resource_path("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=button4,
    relief="flat"
)
button_4.place(
    x=362.9999999999999,
    y=498.0,
    width=239.0,
    height=67.0
)

button_image_5 = PhotoImage(
    file=resource_path("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=button5,
    relief="flat"
)
button_5.place(
    x=30.999999999999886,
    y=498.0,
    width=239.0,
    height=67.0
)

button_image_6 = PhotoImage(
    file=resource_path("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=button6,
    relief="flat"
)
button_6.place(
    x=364.9999999999999,
    y=427.0,
    width=239.0,
    height=67.0
)
var = IntVar()
R1 = Radiobutton(window, text="Binary", variable=var, value=1,
    borderwidth=0,
    highlightthickness=0,
    relief="flat")
R1.place(x=150,
    y=648,
    width=80,
    height=30)

R2 = Radiobutton(window, text="Hexadecimal", variable=var, value=2,
    borderwidth=0,
    highlightthickness=0,
    relief="flat")
R2.place(x=230,
    y=648,
    width=100,
    height=30)
var.set(1)
canvas.create_text(
    30.999999999999886,
    87.0,
    anchor="nw",
    text="Please enter a polynomial in binary or hex format \nand selct a m for the galois field",
    fill="#FAFFFD",
    font=("Habibi Regular", 24 * -1)
)

photo = PhotoImage(file = "galois.png")
window.iconphoto(False, photo)
window.title("Galois Field Polynomial Arithmetic")
window.resizable(True, True)
window.mainloop()
